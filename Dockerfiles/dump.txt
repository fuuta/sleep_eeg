bash
bash
/run_jupyter.sh --allow-root
/bin/sh -c #(nop)  CMD ["/run_jupyter.sh" "--allow-root"]
/bin/sh -c #(nop)  WORKDIR /notebooks
/bin/sh -c #(nop)  EXPOSE 8888/tcp
/bin/sh -c #(nop)  EXPOSE 6006/tcp
/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64
/bin/sh -c #(nop) COPY file:5485384c641ba7bf763511ad514a0634b4fae9a859906153e69f4c136bb34d41 in / 
/bin/sh -c #(nop) COPY dir:84fe1aedcc4233bfce8efec8407e0c646abcd26531f8475b3bb68f0eb4e15059 in /notebooks 
/bin/sh -c #(nop) COPY file:6ba0b7d6200bfc95765eadccd02455e75bca27e0c80c2f4d15dc61d65ec53b46 in /root/.jupyter/ 
/bin/sh -c ln -s /usr/bin/python3 /usr/bin/python
/bin/sh -c pip3 --no-cache-dir install http://ci.tensorflow.org/view/Release/job/release-matrix-linux-gpu/TF_BUILD_CONTAINER_TYPE=GPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3.5,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-1.4.0rc1-cp35-cp35m-manylinux1_x86_64.whl
/bin/sh -c pip3 --no-cache-dir install         Pillow         h5py         ipykernel         jupyter         matplotlib         numpy         pandas         scipy         sklearn         &&     python3 -m ipykernel.kernelspec
/bin/sh -c curl -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm get-pip.py
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python3         python3-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
/bin/sh -c #(nop)  MAINTAINER Craig Citro <craigcitro@google.com>
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends             libcudnn6=$CUDNN_VERSION-1+cuda8.0             libcudnn6-dev=$CUDNN_VERSION-1+cuda8.0 &&     rm -rf /var/lib/apt/lists/*
/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=6.0.21
/bin/sh -c #(nop)  ENV CUDNN_VERSION=6.0.21
/bin/sh -c echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list
/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-8-0=8.0.61.2-1         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*
/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
/bin/sh -c #(nop)  LABEL com.nvidia.build.id=36081806 com.nvidia.build.ref=02956afb0ac5e3f04aeb2256a009f1065622fadd
/bin/sh -c #(nop)  ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
/bin/sh -c #(nop)  ENV NVIDIA_VISIBLE_DEVICES=all
/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
/bin/sh -c echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf
/bin/sh -c #(nop)  LABEL com.nvidia.volumes.needed=nvidia_driver
/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-8-0=8.0.61.2-1         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-8.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=8-0=8.0.61-1
/bin/sh -c #(nop)  ENV NVIDIA_CUDA_VERSION=8.0.61
/bin/sh -c #(nop)  LABEL com.nvidia.cuda.version=8.0.61
/bin/sh -c #(nop)  ENV CUDA_VERSION=8.0.61
/bin/sh -c NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list
/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
/bin/sh -c #(nop)  CMD ["/bin/bash"]
/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container
/bin/sh -c sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
/bin/sh -c rm -rf /var/lib/apt/lists/*
/bin/sh -c set -xe   && echo '#!/bin/sh' > /usr/sbin/policy-rc.d  && echo 'exit 101' >> /usr/sbin/policy-rc.d  && chmod +x /usr/sbin/policy-rc.d   && dpkg-divert --local --rename --add /sbin/initctl  && cp -a /usr/sbin/policy-rc.d /sbin/initctl  && sed -i 's/^exit.*/exit 0/' /sbin/initctl   && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup   && echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean  && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean  && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean   && echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/docker-no-languages   && echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes   && echo 'Apt::AutoRemove::SuggestsImportant "false";' > /etc/apt/apt.conf.d/docker-autoremove-suggests
/bin/sh -c #(nop) ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 in / 
